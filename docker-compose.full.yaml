version: "3"
services:

  student-life-nuxt:
    image: uolstudentlife/student-life:latest
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./docker.env
    ports:
      -  3000:80
    depends_on:
      - mysql
      - s3

  mysql:
    user: mysql
    image: mysql:8.0.30   # please pin version
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file: ./docker.env
    ports:
      - 3306:3306
    volumes:
      - .dockervolume/mysql:/var/lib/mysql   # prefer local volume instead of docker volume
    healthcheck:
      test: mysqladmin ping -ppass

  # currently, minio server and mc client images do not support arm64 arch e.g. Mac M1 if fips tag used
  s3:
    image: minio/minio:RELEASE.2023-07-07T07-13-57Z   # please pin version
    env_file: ./docker.env
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: sh
    command: -c 'minio server /data --console-address ":9001"'
    restart: always
    volumes:
      - .dockervolume/s3:/data   # prefer local volume instead of docker volume
    healthcheck:
      test: ["CMD", "curl", "-f", "http://s3:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # this is to run the entrypoint command using `mc` to initial setup the objstore bucket and set policy
  minioclient:
    image: minio/mc:RELEASE.2023-07-07T05-25-51Z   # please pin version
    env_file: ./docker.env
    depends_on:
      s3:
        condition: service_healthy
    entrypoint: /bin/sh -c "
      /usr/bin/mc config host add minio http://s3:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/student-life;
      /usr/bin/mc policy set download minio/student-life;
      exit 0;"

