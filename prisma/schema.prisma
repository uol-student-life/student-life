// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_CONNECTION_STRING")
}

model Journal {
  id          Int      @id @default(autoincrement())
  content     Content  @relation(fields: [contentId], references: [id], onDelete: Cascade)
  contentId   Int      @unique
  journalDate DateTime @unique

  tasks      Task[]
  milestones MilestonesOnJournals[]

  mood MoodType?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([journalDate])
}

enum MoodType {
  DEPRESSED
  STRESS
  RELAXED
  MOTIVATED
}

model Content {
  id      Int   @id @default(autoincrement())
  html    Bytes
  lexical Bytes

  journal Journal?
}

model Task {
  id          Int        @id @default(autoincrement())
  description String     @db.VarChar(255)
  status      TaskStatus @default(TODO)
  dueDate     DateTime?

  journal   Journal? @relation(fields: [journalId], references: [id])
  journalId Int?

  milestone   Milestone? @relation(fields: [milestoneId], references: [id])
  milestoneId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskStatus {
  TODO
  DONE
}

model Milestone {
  id          Int             @id @default(autoincrement())
  description String          @db.VarChar(255)
  status      MilestoneStatus @default(INPROGRESS)

  journals MilestonesOnJournals[]
  tasks    Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MilestoneStatus {
  INPROGRESS
  COMPLETED
}

model MilestonesOnJournals {
  journal   Journal @relation(fields: [journalId], references: [id])
  journalId Int

  milestone   Milestone @relation(fields: [milestoneId], references: [id])
  milestoneId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([journalId, milestoneId])
}
